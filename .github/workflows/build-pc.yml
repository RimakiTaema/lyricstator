name: Build Lyricstator (PC)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'Release'
        type: choice
        options:
        - Debug
        - Release
      platform:
        description: 'Target platform (macOS builds may be unreliable)'
        required: true
        default: 'linux-windows'
        type: choice
        options:
        - linux-windows
        - linux-only
        - windows-only
        - all-platforms
      include_macos:
        description: 'Include macOS build (may be unreliable)'
        required: false
        default: false
        type: boolean

jobs:
  # -------------------------------
  # 1️⃣ Setup Qt6 Environment
  # -------------------------------
  setup-qt6:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.6.0'
          arch: 'x64'
          modules: 'qtcharts qtmultimedia qtmultimediawidgets qtwebengine qtwebview qtlocation qtpositioning qtquick3d qt3d qt5compat'
          install-deps: true

      - name: Setup Qt Installer Framework
        run: |
          # Install Qt Installer Framework
          sudo apt update
          sudo apt install -y qt6-tools-dev qt6-tools-dev-tools qbs

      - name: Cache Qt6
        uses: actions/cache@v4
        with:
          path: ${{ env.QT_PREFIX }}
          key: qt6-${{ runner.os }}-${{ hashFiles('**/CMakeLists_Qt6.txt') }}

  # -------------------------------
  # 2️⃣ Build Linux (x86_64) - Always reliable
  # -------------------------------
  build-linux-x64:
    needs: setup-qt6
    if: ${{ github.event.inputs.platform == 'linux-windows' || github.event.inputs.platform == 'linux-only' || github.event.inputs.platform == 'all-platforms' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.6.0'
          arch: 'x64'
          modules: 'qtcharts qtmultimedia qtmultimediawidgets qtwebengine qtwebview qtlocation qtpositioning qtquick3d qt3d qt5compat'
          install-deps: true

      - name: Setup Qt Installer Framework
        run: |
          sudo apt update
          sudo apt install -y qt6-tools-dev qt6-tools-dev-tools qbs cmake build-essential

      - name: Build Lyricstator Qt6
        run: |
          mkdir -p build_qt_linux && cd build_qt_linux
          cmake -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} -f ../CMakeLists_Qt6.txt ..
          cmake --build . --config ${{ github.event.inputs.build_type }} -j$(nproc)

      - name: Create Installer Project
        run: |
          cd build_qt_linux
          make installer

      - name: Build Installer
        run: |
          cd build_qt_linux/installer
          chmod +x build_installer.sh
          ./build_installer.sh

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lyricstator-linux-x64-${{ github.event.inputs.build_type }}
          path: |
            build_qt_linux/Lyricstator_Qt6
            build_qt_linux/installer/
          if-no-files-found: warn

  # -------------------------------
  # 3️⃣ Build Windows (x64) - Reliable
  # -------------------------------
  build-windows-x64:
    needs: setup-qt6
    if: ${{ github.event.inputs.platform == 'linux-windows' || github.event.inputs.platform == 'windows-only' || github.event.inputs.platform == 'all-platforms' }}
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.6.0'
          arch: 'x64'
          modules: 'qtcharts qtmultimedia qtmultimediawidgets qtwebengine qtwebview qtlocation qtpositioning qtquick3d qt3d qt5compat'
          install-deps: true

      - name: Setup Qt Installer Framework
        run: |
          # Install Qt Installer Framework via winget or chocolatey
          winget install Qt.QtInstallerFramework || choco install qt-installer-framework

      - name: Build Lyricstator Qt6
        shell: pwsh
        run: |
          mkdir -p build_qt_windows
          cd build_qt_windows
          cmake -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} -f ../CMakeLists_Qt6.txt ..
          cmake --build . --config ${{ github.event.inputs.build_type }} --parallel

      - name: Create Installer Project
        shell: pwsh
        run: |
          cd build_qt_windows
          make installer

      - name: Build Installer
        shell: pwsh
        run: |
          cd build_qt_windows/installer
          .\build_installer.sh

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lyricstator-windows-x64-${{ github.event.inputs.build_type }}
          path: |
            build_qt_windows/Lyricstator_Qt6.exe
            build_qt_windows/installer/
          if-no-files-found: warn

  # -------------------------------
  # 4️⃣ Build macOS (x64) - Optional, may be unreliable
  # -------------------------------
  build-macos-x64:
    needs: setup-qt6
    if: ${{ (github.event.inputs.platform == 'all-platforms' || github.event.inputs.include_macos == 'true') }}
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Qt6
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.6.0'
          arch: 'x64'
          modules: 'qtcharts qtmultimedia qtmultimediawidgets qtwebengine qtwebview qtlocation qtpositioning qtquick3d qt3d qt5compat'
          install-deps: true

      - name: Setup Qt Installer Framework
        run: |
          brew install qt6-tools qbs

      - name: Build Lyricstator Qt6
        run: |
          mkdir -p build_qt_macos && cd build_qt_macos
          cmake -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} -f ../CMakeLists_Qt6.txt ..
          cmake --build . --config ${{ github.event.inputs.build_type }} -j$(sysctl -n hw.ncpu)

      - name: Create Installer Project
        run: |
          cd build_qt_macos
          make installer

      - name: Build Installer
        run: |
          cd build_qt_macos/installer
          chmod +x build_installer.sh
          ./build_installer.sh

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lyricstator-macos-x64-${{ github.event.inputs.build_type }}
          path: |
            build_qt_macos/Lyricstator_Qt6
            build_qt_macos/installer/
          if-no-files-found: warn

  # -------------------------------
  # 5️⃣ Build Summary
  # -------------------------------
  build-summary:
    needs: [build-linux-x64, build-windows-x64, build-macos-x64]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "=== Lyricstator Qt6 Build Summary ==="
          echo "Build Type: ${{ github.event.inputs.build_type }}"
          echo "Target Platform: ${{ github.event.inputs.platform }}"
          echo "Include macOS: ${{ github.event.inputs.include_macos }}"
          echo ""
          echo "Build Status:"
          echo "- Linux x64: ${{ needs.build-linux-x64.result }}"
          echo "- Windows x64: ${{ needs.build-windows-x64.result }}"
          echo "- macOS x64: ${{ needs.build-macos-x64.result }}"
          echo ""
          echo "Artifacts created:"
          if [ "${{ needs.build-linux-x64.result }}" != "skipped" ]; then
            echo "- Linux: lyricstator-linux-x64-${{ github.event.inputs.build_type }}"
          fi
          if [ "${{ needs.build-windows-x64.result }}" != "skipped" ]; then
            echo "- Windows: lyricstator-windows-x64-${{ github.event.inputs.build_type }}"
          fi
          if [ "${{ needs.build-macos-x64.result }}" != "skipped" ]; then
            echo "- macOS: lyricstator-macos-x64-${{ github.event.inputs.build_type }}"
          fi
          echo ""
          echo "Platform Notes:"
          echo "- Linux: Most reliable, recommended for testing"
          echo "- Windows: Reliable, good for distribution"
          echo "- macOS: Optional, may have issues in CI"
          echo ""
          echo "Each artifact contains:"
          echo "- Application binary"
          echo "- Qt Installer Framework project"
          echo "- Ready-to-build installer"
