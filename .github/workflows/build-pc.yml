name: Build Lyricstator (PC - Linux & Windows)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            triplet: x64-linux
          - os: ubuntu-latest
            arch: arm64
            triplet: arm64-linux
          - os: windows-latest
            arch: x86_64
            triplet: x64-windows
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # -------------------------------
      # Linux dependencies and cross-compiler
      # -------------------------------
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake git g++ pkg-config \
            libglib2.0-dev libsndfile1-dev libasound2-dev libjack-jackd2-dev \
            libpulse-dev

          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          fi

      # -------------------------------
      # Build FluidSynth (Linux only)
      # -------------------------------
      - name: Build FluidSynth from source (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/FluidSynth/fluidsynth.git
          cd fluidsynth
          mkdir build && cd build
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            cmake .. \
              -DCMAKE_SYSTEM_NAME=Linux \
              -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
              -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
              -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
              -DBUILD_SHARED_LIBS=ON \
              -Denable-portaudio=OFF \
              -Denable-dbus=OFF
          else
            cmake .. -DBUILD_SHARED_LIBS=ON -Denable-portaudio=OFF -Denable-dbus=OFF
          fi
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      # -------------------------------
      # Windows dependencies via vcpkg
      # -------------------------------
      - name: Install vcpkg and dependencies
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install sdl2 sdl2-mixer[fluidsynth] sdl2-image sdl2-ttf `
              freetype libpng libjpeg-turbo tgui sfml jsoncpp
          echo "VCPKG_ROOT=$PWD" >> $env:GITHUB_ENV

      # -------------------------------
      # Configure & build Lyricstator
      # -------------------------------
      - name: Configure & build
        run: |
          mkdir -p build && cd build
          if [ "${{ runner.os }}" = "Linux" ]; then
            if [ "${{ matrix.arch }}" = "arm64" ]; then
              cmake .. \
                -DCMAKE_SYSTEM_NAME=Linux \
                -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
                -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
                -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
                -DBUILD_SHARED_LIBS=OFF -DSDL_SHARED=OFF -DSDL_STATIC=ON
            else
              cmake .. -DBUILD_SHARED_LIBS=OFF -DSDL_SHARED=OFF -DSDL_STATIC=ON
            fi
            cmake --build . -- -j$(nproc)
          else
            cmake .. -DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake `
                     -DBUILD_SHARED_LIBS=OFF -DSDL_SHARED=OFF -DSDL_STATIC=ON
            cmake --build . --config Release -- /m
          fi

      # -------------------------------
      # Upload artifacts
      # -------------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Lyricstator-${{ matrix.os }}-${{ matrix.arch }}
          path: build/
