name: Build Lyricstator (PC - Linux & Windows)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x86_64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # -------------------------------
      # Detect Windows ARM64 and skip
      # -------------------------------
      - name: Skip Windows ARM64
        if: runner.os == 'Windows' && matrix.arch == 'arm64'
        run: |
          echo "Windows ARM64 detected â€” exiting workflow."
          exit 0

      # -------------------------------
      # Linux dependencies & build
      # -------------------------------
      - name: Setup Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential git cmake pkg-config \
            libasound2-dev libjack-jackd2-dev libsndfile1-dev \
            libvorbis-dev libogg-dev libopus-dev libflac-dev \
            libmpg123-dev libpulse-dev libfreetype6-dev \
            libglib2.0-dev libglib2.0-dev-bin libx11-dev

      - name: Build OpusFile (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/xiph/opusfile.git
          cd opusfile
          ./autogen.sh
          ./configure --prefix=$HOME/opusfile
          make -j$(nproc)
          make install
          export PKG_CONFIG_PATH=$HOME/opusfile/lib/pkgconfig:$PKG_CONFIG_PATH
          cd ..

      - name: Build FluidSynth v4 (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/FluidSynth/fluidsynth.git
          cd fluidsynth
          git checkout v4.2.2
          mkdir build && cd build
          cmake .. -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$HOME/fluidsynth
          make -j$(nproc)
          make install
          export PKG_CONFIG_PATH=$HOME/fluidsynth/lib/pkgconfig:$PKG_CONFIG_PATH
          cd ../..

      # -------------------------------
      # Windows dependencies
      # -------------------------------
      - name: Setup Windows dependencies
        if: runner.os == 'Windows' && matrix.arch != 'arm64'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes
          choco install git --yes
          choco install mingw --yes

      # -------------------------------
      # Build Lyricstator
      # -------------------------------
      - name: Build Lyricstator
        run: |
          mkdir -p build && cd build
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            cmake .. \
              -DBUILD_SHARED_LIBS=OFF \
              -DSDL_SHARED=OFF \
              -DSDL_STATIC=ON \
              -DCMAKE_PREFIX_PATH="$HOME/opusfile;$HOME/fluidsynth"
            cmake --build . -- -j$(nproc)
          fi
          if [[ "${{ runner.os }}" == "Windows" && "${{ matrix.arch }}" != 'arm64' ]]; then
            cmake .. \
              -DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
              -DBUILD_SHARED_LIBS=OFF \
              -DSDL_SHARED=OFF \
              -DSDL_STATIC=ON
            cmake --build . --config Release -- /m
          fi

      # -------------------------------
      # Upload artifacts
      # -------------------------------
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lyricstator-build-${{ runner.os }}-${{ matrix.arch }}
          path: build/
