name: Build Lyricstator (PC)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # -------------------------------
          # Linux x86_64 libraries
          # -------------------------------
          - os: ubuntu-latest
            arch: x86_64
            role: libs
          # Linux x86_64 app
          - os: ubuntu-latest
            arch: x86_64
            role: app
          # Linux ARM64 app (cross-compile)
          - os: ubuntu-latest
            arch: arm64
            role: app
          # Windows x86_64 app
          - os: windows-latest
            arch: x86_64
            role: app

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------
      # Linux dependencies
      # -------------------------------
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential git cmake pkg-config \
            libasound2-dev libjack-jackd2-dev libsndfile1-dev \
            libvorbis-dev libogg-dev libopus-dev libflac-dev \
            libmpg123-dev libpulse-dev libfreetype6-dev \
            libglib2.0-dev libx11-dev

      # -------------------------------
      # Linux ARM64 extensions
      # -------------------------------
      - name: Install ARM64 libraries (cross)
        if: runner.os == 'Linux' && matrix.arch == 'arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt update
          sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
          sudo apt install -y libasound2-dev:arm64 libjack-jackd2-dev:arm64 \
                              libsndfile1-dev:arm64 libvorbis-dev:arm64 libogg-dev:arm64 \
                              libopus-dev:arm64 libflac-dev:arm64 libmpg123-dev:arm64 \
                              libpulse-dev:arm64 libfreetype6-dev:arm64 libglib2.0-dev:arm64 \
                              libx11-dev:arm64 || true

      # -------------------------------
      # Windows dependencies
      # -------------------------------
      - name: Install Windows dependencies
        if: runner.os == 'Windows'
        run: |
          choco install cmake git mingw --yes

      # -------------------------------
      # Build libraries (Linux x86_64 only)
      # -------------------------------
      - name: Build OpusFile & FluidSynth (Linux x86_64)
        if: runner.os == 'Linux' && matrix.role == 'libs' && matrix.arch == 'x86_64'
        run: |
          git clone --depth 1 https://github.com/xiph/opusfile.git
          cd opusfile
          ./autogen.sh
          ./configure --prefix=$HOME/opusfile
          make -j$(nproc)
          make install
          cd ..

          git clone --depth 1 --branch v2.4.7 https://github.com/FluidSynth/fluidsynth.git
          cd fluidsynth
          mkdir build && cd build
          cmake .. -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$HOME/fluidsynth
          make -j$(nproc)
          make install
          cd ../..

      # -------------------------------
      # Build Lyricstator (Linux x86_64)
      # -------------------------------
      - name: Build Lyricstator (Linux x86_64)
        if: runner.os == 'Linux' && matrix.role == 'app' && matrix.arch == 'x86_64'
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=OFF \
            -DSDL_SHARED=OFF \
            -DSDL_STATIC=ON \
            -DCMAKE_PREFIX_PATH="$HOME/opusfile;$HOME/fluidsynth"
          cmake --build . --parallel $(nproc)

      # -------------------------------
      # Build Lyricstator (Linux ARM64)
      # -------------------------------
      - name: Build Lyricstator (Linux ARM64 cross)
        if: runner.os == 'Linux' && matrix.role == 'app' && matrix.arch == 'arm64'
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=OFF \
            -DSDL_SHARED=OFF \
            -DSDL_STATIC=ON \
            -DCMAKE_PREFIX_PATH="$HOME/opusfile;$HOME/fluidsynth" \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
          cmake --build . --parallel $(nproc)

      # -------------------------------
      # Build Lyricstator (Windows x86_64)
      # -------------------------------
      - name: Build Lyricstator (Windows x86_64)
        if: runner.os == 'Windows' && matrix.role == 'app'
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake .. `
            -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" `
            -DCMAKE_BUILD_TYPE=Release `
            -DBUILD_SHARED_LIBS=OFF `
            -DSDL_SHARED=OFF `
            -DSDL_STATIC=ON
          cmake --build . --config Release --parallel

      # -------------------------------
      # Upload artifacts
      # -------------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lyricstator-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            build/lyricstator
            build/Release/lyricstator.exe
            build/lyricstator.exe
            build/*.so
            build/*.dll
          if-no-files-found: warn
