#!/bin/bash

# Qt Installer Framework installer creation script
# This script creates a professional installer for the Lyricstator application

set -e

# Configuration
APP_NAME="Lyricstator"
APP_VERSION="@PROJECT_VERSION@"
BUILD_DIR="@CMAKE_CURRENT_BINARY_DIR@"
SOURCE_DIR="@CMAKE_CURRENT_SOURCE_DIR@"
INSTALLER_DIR="${BUILD_DIR}/installer"

echo "Creating installer for ${APP_NAME} ${APP_VERSION}..."

# Create installer directory structure
mkdir -p "${INSTALLER_DIR}/packages/com.lyricstator.core/data"
mkdir -p "${INSTALLER_DIR}/packages/com.lyricstator.core/meta"
mkdir -p "${INSTALLER_DIR}/config"

# Copy application files
echo "Copying application files..."
cp -r "${BUILD_DIR}/Lyricstator_Qt6" "${INSTALLER_DIR}/packages/com.lyricstator.core/data/"
cp -r "${SOURCE_DIR}/assets" "${INSTALLER_DIR}/packages/com.lyricstator.core/data/"
cp -r "${SOURCE_DIR}/samples" "${INSTALLER_DIR}/packages/com.lyricstator.core/data/"

# Create package.xml
cat > "${INSTALLER_DIR}/packages/com.lyricstator.core/meta/package.xml" << EOF
<?xml version="1.0"?>
<Package>
    <DisplayName>Lyricstator Core</DisplayName>
    <Description>Lyricstator karaoke application core files</Description>
    <Version>${APP_VERSION}</Version>
    <ReleaseDate>$(date +%Y-%m-%d)</ReleaseDate>
    <Default>true</Default>
    <Script>installscript.qs</Script>
    <UserInterfaces>
        <UserInterface>installer.ui</UserInterface>
    </UserInterfaces>
    <Licenses>
        <License name="GPL-3.0" file="LICENSE.txt" />
    </Licenses>
    <Dependencies>
        <Dependency name="Qt6" />
    </Dependencies>
</Package>
EOF

# Create installscript.qs
cat > "${INSTALLER_DIR}/packages/com.lyricstator.core/meta/installscript.qs" << EOF
function Component()
{
    // Default constructor
}

Component.prototype.createOperations = function()
{
    // Call the base createOperations function
    component.createOperations();
    
    // Create desktop shortcut on Linux
    if (installer.value("os") === "x11") {
        component.addOperation("CreateShortcut", 
            "@TargetDir@/bin/Lyricstator_Qt6",
            "@HomeDir@/Desktop/Lyricstator.desktop",
            "workingDirectory=@TargetDir@/bin",
            "icon=@TargetDir@/share/icons/hicolor/256x256/apps/lyricstator.png",
            "description=Lyricstator Karaoke Application"
        );
    }
    
    // Create start menu shortcut on Windows
    if (installer.value("os") === "win") {
        component.addOperation("CreateShortcut", 
            "@TargetDir@/bin/Lyricstator_Qt6.exe",
            "@StartMenuDir@/Lyricstator/Lyricstator.lnk",
            "workingDirectory=@TargetDir@/bin",
            "icon=@TargetDir@/bin/Lyricstator_Qt6.exe",
            "description=Lyricstator Karaoke Application"
        );
    }
}
EOF

# Create installer.ui
cat > "${INSTALLER_DIR}/packages/com.lyricstator.core/meta/installer.ui" << EOF
<?xml version="1.0" encoding="UTF-8"?>
<Installer>
    <Title>Lyricstator Installer</Title>
    <Publisher>Lyricstator Team</Publisher>
    <ProductUrl>https://github.com/lyricstator/lyricstator</ProductUrl>
    <Icon>icon.ico</Icon>
    <Banner>installer_banner.png</Banner>
    <Background>installer_background.png</Background>
    <WizardStyle>Modern</WizardStyle>
    <StartMenuDir>Lyricstator</StartMenuDir>
    <TargetDir>@ApplicationsDir@/Lyricstator</TargetDir>
    <AdminTargetDir>@ApplicationsDir@/Lyricstator</AdminTargetDir>
    <RemoteRepositories>
        <Repository>
            <Url>https://updates.lyricstator.com</Url>
            <Enabled>true</Enabled>
        </Repository>
    </RemoteRepositories>
</Installer>
EOF

# Create config.xml
cat > "${INSTALLER_DIR}/config/config.xml" << EOF
<?xml version="1.0" encoding="UTF-8"?>
<Installer>
    <Name>Lyricstator</Name>
    <Version>${APP_VERSION}</Version>
    <Title>Lyricstator Installer</Title>
    <Publisher>Lyricstator Team</Publisher>
    <ProductUrl>https://github.com/lyricstator/lyricstator</ProductUrl>
    <Icon>icon.ico</Icon>
    <Banner>installer_banner.png</Banner>
    <Background>installer_background.png</Background>
    <WizardStyle>Modern</WizardStyle>
    <StartMenuDir>Lyricstator</StartMenuDir>
    <TargetDir>@ApplicationsDir@/Lyricstator</TargetDir>
    <AdminTargetDir>@ApplicationsDir@/Lyricstator</AdminTargetDir>
    <RemoteRepositories>
        <Repository>
            <Url>https://updates.lyricstator.com</Url>
            <Enabled>true</Enabled>
        </Repository>
    </RemoteRepositories>
</Installer>
EOF

# Create installer project file
cat > "${INSTALLER_DIR}/lyricstator_installer.qbs" << EOF
import qbs

Project {
    name: "Lyricstator Installer"
    
    Product {
        name: "Lyricstator Installer"
        type: "installer"
        
        Depends { name: "QtInstallerFramework" }
        
        Group {
            name: "Installer Files"
            files: [
                "config/*",
                "packages/*"
            ]
        }
        
        Group {
            name: "Resources"
            files: [
                "*.ico",
                "*.png"
            ]
        }
    }
}
EOF

# Create build script for the installer
cat > "${INSTALLER_DIR}/build_installer.sh" << EOF
#!/bin/bash

# Build the installer using Qt Installer Framework
echo "Building installer..."

# Use qbs to build the installer
qbs build --file lyricstator_installer.qbs

echo "Installer built successfully!"
echo "Output: \${PWD}/installer"
EOF

chmod +x "${INSTALLER_DIR}/build_installer.sh"

echo "Installer project created in: ${INSTALLER_DIR}"
echo "To build the installer, run: cd ${INSTALLER_DIR} && ./build_installer.sh"
echo ""
echo "Note: Make sure Qt Installer Framework is installed and qbs is available in your PATH"