#!/bin/bash

# cQtdeployer deployment script for Lyricstator Qt6
# This script is configured by CMake

echo "=== Lyricstator Qt6 Deployment ==="
echo "Using cQtdeployer for application packaging"

# Configuration
APP_NAME="Lyricstator_Qt6"
BUILD_DIR="@CMAKE_CURRENT_BINARY_DIR@"
SOURCE_DIR="@CMAKE_CURRENT_SOURCE_DIR@"
TARGET_BINARY="$BUILD_DIR/$APP_NAME"
DEPLOY_DIR="$BUILD_DIR/deploy"

# Check if binary exists
if [ ! -f "$TARGET_BINARY" ]; then
    echo "Error: Binary $TARGET_BINARY not found!"
    echo "Please build the project first."
    exit 1
fi

# Check if cQtdeployer is available
if ! command -v cqtdeployer &> /dev/null; then
    echo "Error: cQtdeployer not found!"
    echo "Please install cQtdeployer from: https://github.com/QuasarApp/CQtDeployer"
    echo ""
    echo "Installation options:"
    echo "1. Download from releases: https://github.com/QuasarApp/CQtDeployer/releases"
    echo "2. Install via package manager (if available)"
    echo "3. Build from source"
    exit 1
fi

echo "Found cQtdeployer: $(which cqtdeployer)"
echo "Binary to deploy: $TARGET_BINARY"
echo "Deployment directory: $DEPLOY_DIR"

# Create deployment directory
mkdir -p "$DEPLOY_DIR"

# Run cQtdeployer
echo ""
echo "Running cQtdeployer..."

cqtdeployer \
    -bin "$TARGET_BINARY" \
    -targetDir "$DEPLOY_DIR" \
    -qmake \
    -libDir "$BUILD_DIR" \
    -recursiveDepth 5 \
    -verbose 2 \
    -always-overwrite \
    -deploySystem \
    -deployQt \
    || {
        echo "Error: cQtdeployer failed!"
        exit 1
    }

# Copy additional assets
echo ""
echo "Copying additional assets..."

# Copy asset directories
if [ -d "$SOURCE_DIR/assets" ]; then
    echo "Copying assets..."
    cp -r "$SOURCE_DIR/assets" "$DEPLOY_DIR/"
fi

if [ -d "$SOURCE_DIR/samples" ]; then
    echo "Copying samples..."
    cp -r "$SOURCE_DIR/samples" "$DEPLOY_DIR/"
fi

# Copy documentation
if [ -f "$SOURCE_DIR/README.md" ]; then
    cp "$SOURCE_DIR/README.md" "$DEPLOY_DIR/"
fi

if [ -f "$SOURCE_DIR/LICENSE" ]; then
    cp "$SOURCE_DIR/LICENSE" "$DEPLOY_DIR/"
fi

# Create launcher script for Linux
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    echo "Creating Linux launcher script..."
    cat > "$DEPLOY_DIR/lyricstator.sh" << EOF
#!/bin/bash
# Lyricstator Qt6 Launcher Script

# Get the directory of this script
DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Set library path
export LD_LIBRARY_PATH="\$DIR/lib:\$LD_LIBRARY_PATH"

# Run the application
"\$DIR/$APP_NAME" "\$@"
EOF
    chmod +x "$DEPLOY_DIR/lyricstator.sh"
fi

# Create Windows batch file
if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
    echo "Creating Windows launcher script..."
    cat > "$DEPLOY_DIR/lyricstator.bat" << EOF
@echo off
REM Lyricstator Qt6 Launcher Script

REM Get the directory of this script
set "DIR=%~dp0"

REM Add library directory to PATH
set "PATH=%DIR%bin;%PATH%"

REM Run the application
"%DIR%$APP_NAME.exe" %*
EOF
fi

echo ""
echo "=== Deployment Complete ==="
echo "Deployed application is in: $DEPLOY_DIR"
echo ""
echo "Contents:"
ls -la "$DEPLOY_DIR"

echo ""
echo "To distribute the application:"
echo "1. Archive the entire '$DEPLOY_DIR' directory"
echo "2. The application should run on target systems without Qt6 installed"
echo "3. On Linux, users can run: ./lyricstator.sh"
echo "4. On Windows, users can run: lyricstator.bat or $APP_NAME.exe"

echo ""
echo "Testing deployment..."
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if [ -f "$DEPLOY_DIR/lyricstator.sh" ]; then
        echo "You can test with: $DEPLOY_DIR/lyricstator.sh --help"
    fi
elif [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
    if [ -f "$DEPLOY_DIR/$APP_NAME.exe" ]; then
        echo "You can test with: $DEPLOY_DIR/$APP_NAME.exe --help"
    fi
fi

echo "Deployment script completed successfully!"